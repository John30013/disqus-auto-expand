import{defaultConfig}from"./dax-defaultConfig.js";let _config=defaultConfig,_manifest=chrome.runtime.getManifest();function setIcon(e){_config.doDebug&&console.debug(`setIcon(${e}): entering.`),chrome.tabs.query({active:!0,currentWindow:!0},([o])=>{chrome.runtime.lastError?console.info(`--\x3e Couldn't get active tab to send message: ${chrome.runtime.lastError.message}.`):o?(_config.doDebug&&console.debug("--\x3e Setting icon."),chrome.action.setIcon({tabId:o.id,path:e?"images/disqus_eye_16.png":"images/disqus_eye_16_paused.png"}),chrome.action.setTitle({tabId:o.id,title:`${_manifest.page_action.default_title}${e?"":" (paused)"}`})):console.info("--\x3e No active tab; aborting.")})}function updateConfigValue(e){const{key:o,value:t}=e;chrome.storage.sync.get(null,e=>{e[o]=t,updateSyncedConfig(e)})}function updateSyncedConfig(e){chrome.storage.sync.set(e,()=>{chrome.runtime.lastError?console.error("Couldn't update config in storage: "+chrome.runtime.lastError.message):e.doDebug&&console.debug("--\x3e added updated config values to storage: %o",e)})}chrome.runtime.onInstalled.addListener(()=>{chrome.storage.sync.get(null,e=>{if(chrome.runtime.lastError)console.info("Couldn't get configuration options from storage: "+chrome.runtime.lastError.message);else{if(Object.keys(e).length){_config=e,console.debug("Got config from storage: %o",_config);let o=[];for(let e in _config)defaultConfig.hasOwnProperty(e)||o.push(e);if(o.length){chrome.storage.sync.remove(o,()=>{chrome.runtime.lastError?console.info(`Couldn't remove obsolete keys from storage: ${chrome.runtime.lastError.message}.`):_config.doDebug&&console.debug("--\x3e removed obsolete config value(s),",o)});for(let e of o)delete _config[e]}Object.keys(_config).length<Object.keys(defaultConfig).length&&(_config={...defaultConfig,..._config},updateSyncedConfig(_config))}else console.debug("Config not found in storage; storing default config."),chrome.storage.sync.set(defaultConfig);setIcon(!!_config.isEnabled)}}),chrome.declarativeContent.onPageChanged.removeRules(void 0,(function(){chrome.declarativeContent.onPageChanged.addRules([{conditions:[new chrome.declarativeContent.PageStateMatcher({css:["#disqus_thread"]})],actions:[new chrome.declarativeContent.ShowAction]}])}))}),chrome.runtime.onMessage.addListener(e=>{_config.doDebug&&console.debug("Got message: %o",e),"setIcon"===e.action&&void 0!==e.data?setIcon(e.data):"updateConfig"===e.action&&"object"==typeof e.data&&(updateConfigValue(e.data),"isEnabled"===e.data.key&&(_config.doDebug&&console.debug("--\x3e config value `isEnabled` updated to %o; calling setIcon().",e.data.value),setIcon(e.data.value)))});